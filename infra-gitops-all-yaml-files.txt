-e \n--- FILE: ./root-apps/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: apps-root
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/eharriett0/infra-gitops.git
    targetRevision: main
    path: argo
    directory:
      recurse: true
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./boostrap-values/argocd-values.yaml ---\n
# infra-gitops/values/argocd-values.yaml

server:
  service:
    type: NodePort
  ingress:
    enabled: false

configs:
  registries:
    enabled: true
    secret:
      name: argocd-image-updater-secret
      key: registries.conf
  params:
    server.insecure: true

# Optional: disable Argo CD notifications if you're not using them yet
notifications:
  enabled: false

annotations:
  argocd.argoproj.io/compare-options: IgnoreExtraneous-e \n--- FILE: ./argo/infra/istio-virtualservices/sentiment-service-vs.yaml ---\n
# argo/infra/istio-virtualservices/sentiment-service-vs.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: sentiment-service
  namespace: sentiment
spec:
  hosts:
    - sentiment
  http:
    - route:
        - destination:
            host: sentiment
            port:
              number: 80-e \n--- FILE: ./argo/infra/istio-virtualservices/guestbook-vs.yaml ---\n
# argo/infra/istio-virtualservices/guestbook-vs.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: guestbook
  namespace: istio-system
spec:
  hosts:
    - guestbook.svc.cluster.local
  http:
    - route:
        - destination:
            host: guestbook.guestbook.svc.cluster.local
            port:
              number: 80-e \n--- FILE: ./argo/infra/istio-mtls/peer-auth.yaml ---\n
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: istio-system
spec:
  mtls:
    mode: STRICT-e \n--- FILE: ./argo/infra/argocd-image-updater/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-image-updater
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argocd-image-updater
    targetRevision: 0.12.1
    helm:
      releaseName: argocd-image-updater
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true-e \n--- FILE: ./argo/infra/argocd-image-updater/values.yaml ---\n
extraVolumes:
  - name: image-updater-config
    secret:
      secretName: argocd-image-updater-secret

extraVolumeMounts:
  - name: image-updater-config
    mountPath: /app/config
    readOnly: true-e \n--- FILE: ./argo/infra/istio-ingress/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-ingress
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: gateway
    targetRevision: 1.20.2
    helm:
      releaseName: istio-ingress
      values: |
        service:
          type: LoadBalancer
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/infra/namespaces/sentiment-service.yaml ---\n
apiVersion: v1
kind: Namespace
metadata:
  name: sentiment
  annotations:
    istio-injection: enabled-e \n--- FILE: ./argo/infra/namespaces/guestbook.yaml ---\n
apiVersion: v1
kind: Namespace
metadata:
  name: guestbook
  annotations:
    istio-injection: enabled-e \n--- FILE: ./argo/infra/istio-base/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-base
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: base
    targetRevision: 1.20.2 
    helm:
      releaseName: istio-base
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: istiod-default-validator
      jsonPointers:
        - /webhooks/0/clientConfig/caBundle-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 70.4.2
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/servicemonitor-istio.yaml ---\n
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: istio
  namespace: istio-system
  labels:
    release: prometheus-stack
spec:
  selector:
    matchLabels:
      istio: prometheus
  namespaceSelector:
    matchNames:
      - istio-system
  endpoints:
    - port: http-envoy-prom
      interval: 15s-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/dashboards/istio-workload-dashboard.yaml ---\n
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-workload-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    app.kubernetes.io/name: grafana
data:
  istio-workload-dashboard.json: |
    {{- $dashboard := (readFile "dashboards/istio-workload.json") | nindent 4 -}}
    {{ $dashboard }}-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/dashboards/istio-dashboard.yaml ---\n
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-istio
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  istio-dashboard.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "type": "dashboard"
          }
        ]
      },
      "title": "Istio Service Mesh",
      "panels": [
        {
          "type": "graph",
          "title": "Envoy Requests",
          "targets": [
            {
              "expr": "sum(rate(istio_requests_total[1m])) by (destination_workload)",
              "legendFormat": "{{destination_workload}}",
              "interval": ""
            }
          ],
          "datasource": "Prometheus"
        }
      ],
      "schemaVersion": 30,
      "version": 1
    }-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/dashboards/istio-mesh-dashboard.yaml ---\n
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-mesh-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    app.kubernetes.io/name: grafana
data:
  istio-mesh-dashboard.json: |
    {{- $dashboard := (readFile "dashboards/istio-mesh.json") | nindent 4 -}}
    {{ $dashboard }}-e \n--- FILE: ./argo/infra/monitoring/prometheus-stack/values.yaml ---\n
fullnameOverride: prometheus

grafana:
  enabled: true
  adminPassword: prom-operator
  service:
    type: ClusterIP
  persistence:
    enabled: false
  defaultDashboardsEnabled: true

prometheus:
  prometheusSpec:
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    ruleSelector: {}
    retention: 10d
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 8Gi

alertmanager:
  enabled: true
  alertmanagerSpec:
    replicas: 1
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 2Gi

nodeExporter:
  enabled: true

kubeStateMetrics:
  enabled: true

additionalServiceMonitors:
  - name: istiod
    selector:
      matchLabels:
        app: istiod
    namespaceSelector:
      matchNames:
        - istio-system
    endpoints:
      - port: http-monitoring
        interval: 15s

  - name: istio-ingressgateway
    selector:
      matchLabels:
        app: istio-ingressgateway
    namespaceSelector:
      matchNames:
        - istio-system
    endpoints:
      - port: http-monitoring
        interval: 15s

  - name: istio-telemetry
    selector:
      matchLabels:
        app: istio-telemetry
    namespaceSelector:
      matchNames:
        - istio-system
    endpoints:
      - port: http-monitoring
        interval: 15s-e \n--- FILE: ./argo/infra/istio-policies/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-policies
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/eharriett0/infra-gitops.git
    targetRevision: main
    path: argo/infra/istio-policies
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/infra/istio-policies/destinationrule.yaml ---\n
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: default
  namespace: istio-system
spec:
  host: "*.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL-e \n--- FILE: ./argo/infra/istio-control-plane/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istio-control-plane
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: istiod
    targetRevision: 1.20.2
    helm:
      releaseName: istiod
  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/infra/istio-control-plane/values.yaml ---\n
-e \n--- FILE: ./argo/applications/flask-guestbook/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: flask-guestbook
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/update-strategy: latest
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/git-branch: main
    argocd-image-updater.argoproj.io/image-list: flask-guestbook=ghcr.io/eharriett0/flask-guestbook
spec:
  project: default
  source:
    repoURL: https://github.com/eharriett0/app-deployments
    targetRevision: HEAD
    path: flask-guestbook
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: guestbook
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/applications/sentiment-service/app.yaml ---\n
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sentiment-service
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/update-strategy: latest
    argocd-image-updater.argoproj.io/write-back-method: git
    argocd-image-updater.argoproj.io/git-branch: main
    argocd-image-updater.argoproj.io/image-list: sentiment-service=ghcr.io/eharriett0/sentiment-service
spec:
  project: default
  source:
    repoURL: https://github.com/eharriett0/app-deployments
    targetRevision: HEAD
    path: sentiment-service
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: sentiment
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true-e \n--- FILE: ./argo/manifests/argocd-image-updater-secret.yaml ---\n
apiVersion: v1
kind: Secret
metadata:
  name: argocd-image-updater-secret
  namespace: argocd
type: Opaque
stringData:
  registries.conf: |
    registries:
      - name: ghcr
        prefix: ghcr.io
        credentials:
          username: $GITHUB_USER
          password: $GITHUB_TOKEN
        default: true