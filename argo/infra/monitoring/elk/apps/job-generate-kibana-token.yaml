apiVersion: batch/v1
kind: Job
metadata:
  name: elk-generate-kibana-token
  namespace: elk
  labels:
    app: elk-generate-kibana-token
spec:
  project: default
  source:
    repoURL: https://github.com/eharriett0/infra-gitops.git
    targetRevision: main
    path: argo/infra/monitoring/elk/jobs
  destination:
    server: https://kubernetes.default.svc
    namespace: elk
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  ttlSecondsAfterFinished: 60
  template:
    spec:
      serviceAccountName: default
      restartPolicy: Never
      containers:
        - name: generate-token
          image: curlimages/curl:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e

              echo "Waiting for Elasticsearch to respond..."
              until curl -k -s https://elasticsearch-master.elk.svc:9200/_cluster/health | grep -q '"status"'; do
                echo "Elasticsearch not reachable yet. Sleeping 5 seconds..."
                sleep 5
              done

              echo "Requesting service token from Elasticsearch..."
              RESPONSE=$(curl -k -u "elastic:${ELASTIC_PASSWORD}" -X POST "https://elasticsearch-master.elk.svc:9200/_security/service/elastic/kibana/elk-kibana/token" -H "Content-Type: application/json" -s)

              TOKEN=$(echo "$RESPONSE" | grep -o '"value":"[^"]*"' | sed 's/"value":"\(.*\)"/\1/')

              if [ -z "$TOKEN" ]; then
                echo "ERROR: Could not retrieve the token!"
                echo "Response was: $RESPONSE"
                exit 1
              fi

              echo "Creating Kubernetes Secret with the token..."
              kubectl create secret generic elk-kibana-kibana-es-token \
                --namespace elk \
                --from-literal=token="$TOKEN" \
                --dry-run=client -o yaml | kubectl apply -f -

              echo "Successfully created the token and stored it in Kubernetes."
      env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-master-credentials
              key: password